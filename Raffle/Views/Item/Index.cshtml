@model Raffle.Models.Item
@{
    ViewBag.Title = Model.Name;
    var rafflePercentage = (Model.Raffles.Count * 100) / Model.TotalRaffleCount;
    var user = ((Raffle.Models.UserProfile)ViewBag.User);
    var hasBought = user.Raffles.Any(r => r.ItemId == Model.Id);
    var rafflesLeft = Model.TotalRaffleCount - Model.Raffles.Count;
    var isOwner = Model.OwnerId == user.UserId;
}

<h2>
    @Model.Name
    @if (!isOwner)
    { 
        <small>from <strong>@Model.Owner.UserName</strong></small>
    }
</h2>
<h4>@Model.Description</h4>

@if (rafflePercentage > 0)
{ 
    <div class="progress">
        <div class="bar" style="width: @(rafflePercentage)%"></div>
    </div>
}
<div class="row">
    <div class="span2">
        <ul class="thumbnails">
            <li class="span2 tile">
                <h1>@rafflesLeft</h1>
                <h3>@if (rafflesLeft != 1)
                    {<text>raffles</text>}
                    else
                    {<text>raffle</text>} left</h3>
            </li>
        </ul>
    </div>
    <div class="span8">
        @if (isOwner)
        {
            if (Model.CanBuy)
            { 
            <div class="alert alert-info">
                <strong>Raffling!</strong>
                Please wait for all the raffles to be bought
            </div>
            }
            else
            {
                //TODO - Send to user
            }
        }
        else
            if (!Model.CanBuy)
            {
                //Item closed

                if (hasBought && user.Raffles.Any(r => r.ItemId == Model.Id && r.IsPrized == true))
                {
            <div class="alert alert-success">
                <strong>Congratulations!</strong>
                You have won this item
                        @Html.ActionLink("Now what?", "Index", "Help", null, new { @class = "btn btn-primary" })
            </div>
                }
                else
                {
            <div class="alert alert-info">
                <strong>Sorry!</strong>
                This item as not been raffled to you
            </div>
                }
            }
            else
            {
                if (hasBought)
                {
            <div class="alert alert-info">
                <strong>Good luck!</strong>
                You have purchased a raffle for this item. Wait for all the raffles to be purchased to find out if you are the winner
            </div>
                }
                else
                {
                    var starterButton = PayPal.ButtonManager.BuyNowButton.Create(new PayPal.ButtonManager.HtmlButtonVariables
                    {
                        Business = "rhymecheatEbay-facilitator@gmail.com",
                        ItemName = "raffle",
                        Amount = Model.RafflePrice.ToString(),
                        CurrencyCode = "EUR"
                    });
                    @(new HtmlString(starterButton.WebSiteCode))
                }
            }
    </div>
</div>
<ul class="thumbnails">
    @foreach (Raffle.Models.Raffle raffle in Model.Raffles)
    {
        var state = raffle.IsPrized.GetValueOrDefault() ? "tile-teal" : string.Empty;
        <li class="span2 tile @state">
            <h1>@raffle.RaffleNumber</h1>
            <h6>@@ @raffle.PurchasedAt</h6>
        </li>
    
    }
</ul>
