@using Raffle.Models
@model Item
@{
    ViewBag.Title = Model.Name;
    var rafflePercentage = (Model.Raffles.Count * 100) / Model.TotalRaffleCount;
}

<h2>@Model.Name</h2>
<h3><small>from</small> @Model.Owner.UserName</h3>

@if (!Model.CanBuy)
{
    //ended 
}
else
{
    if (rafflePercentage > 0)
    { 
        <div class="progress">
            <div class="bar" style="width: @(rafflePercentage)%"></div>
        </div>
    }

    <h3>
        <span class="label label-info">@(Model.TotalRaffleCount - Model.Raffles.Count)</span>
        raffles left
    </h3>
    @using (Html.BeginForm())
    {    
        @Html.ValidationSummary(true)
        <input type="submit" class="btn btn-primary btn-large" value="Buy" />
    }
}

@foreach (Raffle raffle in Model.Raffles)
{
    <ul class="thumbnails">
        <li class="span3 tile tile-teal">
            <a href="#" >
                <h1>@raffle.RaffleNumber</h1>
                <p>@raffle.UserProfile.UserName</p>
                <p>@@@raffle.PurchasedAt</p>
            </a>
        </li>
    </ul>
}

@*@if (availableRaffles > 0)
{
    using (Html.BeginForm())
    {        
    <div>
        There are still <strong>@availableRaffles</strong> raffles
    </div>
    
    <input type="number" min="1" max="@availableRaffles" step="1" name="raffleNumber"/>
    <input type="submit" value="Buy" />
    }
}
else
{
    <h1>This item is out of raffles</h1>
}*@