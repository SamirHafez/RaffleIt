@model Raffle.Models.Item
@{
    ViewBag.Title = Model.Name;
    var rafflePercentage = (Model.Raffles.Count * 100) / Model.TotalRaffleCount;
    var user = ((Raffle.Models.UserProfile)ViewBag.User);
    var hasBought = user.Raffles.Any(r => r.ItemId == Model.Id);
    var rafflesLeft = Model.TotalRaffleCount - Model.Raffles.Count;
    var isOwner = Model.OwnerId == user.UserId;
}

<div class="container">
    <div class="row-fluid">
        <div class="span12">
            <h1>
                @Model.Name
                @if (!isOwner)
                { 
                    <small>from <strong>@Model.Owner.UserName</strong></small>
                }
            </h1>
            <h2 class="lead">@Model.Description</h2>

            @if (rafflePercentage > 0)
            { 
                <div class="progress">
                    <div class="bar" style="width: @(rafflePercentage)%"></div>
                </div>
            }
            <div class="row-fluid">
                <div class="span3">
                    <ul class="thumbnails">
                        <li class="span3 tile tile-double">
                            <h1>@(Model.RafflePrice) €</h1>
                            <h3>each raffle</h3>
                        </li>
                    </ul>
                </div>
                <div class="span2">
                    <ul class="thumbnails">
                        <li class="span2 tile">
                            <h1>@rafflesLeft</h1>
                            <h3>@if (rafflesLeft != 1)
                                {<text>raffles</text>}
                                else
                                {<text>raffle</text>} left</h3>
                        </li>
                    </ul>
                </div>
                <div class="span7">
                    @if (isOwner)
                    {
                        <h2>manage
                <small>manage your item</small>
                        </h2>
                        if (Model.CanBuy)
                        { 
                        <div class="alert alert-info">
                            <strong>Raffling!</strong>
                            Please wait for all the raffles to be purchased
                        </div>
                        }
                        else
                        {
                            //TODO - Send to user
                        }
                    }
                    else
                    {
                        <h2>buy raffle
                <small>or check your purchased raffle status</small>
                        </h2>
                        if (!Model.CanBuy)
                        {
                            //Item closed

                            if (hasBought && user.Raffles.Any(r => r.ItemId == Model.Id && r.IsPrized == true))
                            {
                        <div class="alert alert-success">
                            <strong>Congratulations!</strong>
                            You have won this item
                        @Html.ActionLink("Now what?", "Index", "Help", null, new { @class = "btn btn-primary" })
                        </div>
                            }
                            else
                            {
                        <div class="alert alert-info">
                            <strong>Sorry!</strong>
                            This item as not been raffled to you
                        </div>
                            }
                        }
                        else
                        {
                            if (hasBought)
                            {
                        <div class="alert alert-info">
                            <strong>Good luck!</strong>
                            You have purchased a raffle for this item. Wait for all the raffles to be purchased to find out if you are the winner
                        </div>
                            }
                            else
                            {
                                var starterButton = PayPal.ButtonManager.BuyNowButton.Create(new PayPal.ButtonManager.HtmlButtonVariables
                                {
                                    Business = "rhymecheatEbay-facilitator@gmail.com",
                                    ItemName = string.Format("Raffle_{0}", Model.Id),
                                    Amount = Model.RafflePrice.ToString().Replace(",", "."),
                                    CurrencyCode = "EUR"
                                });
                        @(new HtmlString(starterButton.WebSiteCode))
                            }
                        }
                    }
                </div>
            </div>
            @if (Model.Raffles.Any())
            {
                <h2>purchases
        <small>raffles purchased for this item</small>
                </h2> 
                <ul class="thumbnails">
                    @foreach (Raffle.Models.Raffle raffle in Model.Raffles)
                    {
                        var state = raffle.IsPrized.GetValueOrDefault() ? "tile-teal" : string.Empty;
                        <li class="span2 tile @state">
                            <h1>@raffle.RaffleNumber</h1>
                            <h6>@@ @raffle.PurchasedAt</h6>
                        </li>
    
                    }
                </ul>
            }
            else
            {
                <div class="alert alert-info">
                    <strong>waiting for the first!</strong>
                    no raffles have been purchased for this item
                </div>
            }

            @if (((IQueryable<Raffle.Models.Item>)ViewBag.Related).Any())
            {
                <h2>
                    related
                    <small>lastest items in the same category</small>
                </h2>
                @foreach (var item in (IQueryable<Raffle.Models.Item>)@ViewBag.Related)
                {
                    Html.RenderPartial("_ItemPreviewPartial", item);
                }
            }
        </div>
    </div>
</div>
